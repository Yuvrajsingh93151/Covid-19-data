<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Global_Covid19' inline='true' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global_Covid19' name='textscan.0ni7r7b1dxihdn12rxgo61ibygs1'>
            <connection class='textscan' directory='C:/Users/yuvra/Downloads' filename='Global_Covid19.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ni7r7b1dxihdn12rxgo61ibygs1' name='Global_Covid19.csv' table='[Global_Covid19#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country Region' ordinal='0' />
            <column datatype='string' name='ISO3' ordinal='1' />
            <column datatype='datetime' name='Last Update' ordinal='2' />
            <column datatype='string' name='People Hospitalized' ordinal='3' />
            <column datatype='string' name='People Tested' ordinal='4' />
            <column datatype='real' name='Active' ordinal='5' />
            <column datatype='integer' name='Confirmed' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='real' name='Incident Rate' ordinal='8' />
            <column datatype='real' name='Lat' ordinal='9' />
            <column datatype='real' name='Long' ordinal='10' />
            <column datatype='real' name='Mortality Rate' ordinal='11' />
            <column datatype='real' name='Recovered' ordinal='12' />
            <column datatype='string' name='UID' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Region]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Country Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO3]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>ISO3</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Hospitalized</remote-name>
            <remote-type>129</remote-type>
            <local-name>[People Hospitalized]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>People Hospitalized</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Tested</remote-name>
            <remote-type>129</remote-type>
            <local-name>[People Tested]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>People Tested</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Incident Rate]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Incident Rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality Rate]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Mortality Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UID]</local-name>
            <parent-name>[Global_Covid19.csv]</parent-name>
            <remote-alias>UID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Iso3' datatype='string' name='[ISO3]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='Global_Covid19.csv' datatype='table' name='[__tableau_internal_object_id__].[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]' role='measure' type='quantitative' />
      <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yuvra/AppData/Local/Temp/TableauTemp/#TableauTemp_0n19f3u17fshk616u8ws10j5rlij.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/19/2025 02:54:52 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Region</remote-alias>
              <ordinal>0</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>127</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO3</remote-alias>
              <ordinal>1</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Update</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Last Update]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last Update</remote-alias>
              <ordinal>2</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People Hospitalized</remote-name>
              <remote-type>129</remote-type>
              <local-name>[People Hospitalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>People Hospitalized</remote-alias>
              <ordinal>3</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People Tested</remote-name>
              <remote-type>129</remote-type>
              <local-name>[People Tested]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>People Tested</remote-alias>
              <ordinal>4</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>5</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>441</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>6</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2119</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>634</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Incident Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident Rate</remote-alias>
              <ordinal>8</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>9</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3842</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>10</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3724</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mortality Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mortality Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mortality Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2439</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>12</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>643</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UID</remote-alias>
              <ordinal>13</ordinal>
              <family>Global_Covid19.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Winter Olympics 2022&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Summer Olympics 2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Global_Covid19.csv' id='Global_Covid19.csv_339C4C2194D74436B4682E64AC65C6BC'>
            <properties context=''>
              <relation connection='textscan.0ni7r7b1dxihdn12rxgo61ibygs1' name='Global_Covid19.csv' table='[Global_Covid19#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country Region' ordinal='0' />
                  <column datatype='string' name='ISO3' ordinal='1' />
                  <column datatype='datetime' name='Last Update' ordinal='2' />
                  <column datatype='string' name='People Hospitalized' ordinal='3' />
                  <column datatype='string' name='People Tested' ordinal='4' />
                  <column datatype='real' name='Active' ordinal='5' />
                  <column datatype='integer' name='Confirmed' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='real' name='Incident Rate' ordinal='8' />
                  <column datatype='real' name='Lat' ordinal='9' />
                  <column datatype='real' name='Long' ordinal='10' />
                  <column datatype='real' name='Mortality Rate' ordinal='11' />
                  <column datatype='real' name='Recovered' ordinal='12' />
                  <column datatype='string' name='UID' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed + Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='real' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Active])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' />
              <size column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]</rows>
        <cols>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{8B0888FE-8BDA-4F12-A2DF-2B2C3BEC7D4A}' />
    </worksheet>
    <worksheet name='Confirmed Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 12 Confirmed Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]</rows>
        <cols>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</cols>
      </table>
      <simple-id uuid='{47AF2E86-B21D-4A37-A7A3-372FD3B1F856}' />
    </worksheet>
    <worksheet name='Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Death Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' />
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' />
              <text column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' />
              <text column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{20FA1CCD-E640-48FE-AA89-80AC68AF56DB}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='real' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Confirmed:qk]' />
              <lod column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' />
              <lod column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[Latitude (generated)]</rows>
        <cols>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D8B3D095-570D-4350-9A30-AA3F5335BF9E}' />
    </worksheet>
    <worksheet name='Mortalilty Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mortalilty Rate&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality Rate]' derivation='Sum' name='[sum:Mortality Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Mortality Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Mortality Rate:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</rows>
        <cols>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Mortality Rate:qk]</cols>
      </table>
      <simple-id uuid='{11048324-D7A7-4056-93F9-CB3F3DC4CB94}' />
    </worksheet>
    <worksheet name='Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Recoveries </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='313' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' />
              <size column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]' />
              <text column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B412495E-4F45-40E3-BA00-8CBEAAB5740B}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>both &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Covid19' name='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk' />
          </datasources>
          <datasource-dependencies datasource='federated.1l7ntbf17p9u4i1ajyjfd1blr0rk'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Last Update]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Long]' derivation='Avg' name='[avg:Long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Update]' derivation='Year-Trunc' name='[tyr:Last Update:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[avg:Long:qk]' />
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[avg:Long:qk]' />
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]' />
              <lod column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[avg:Long:qk]' />
              <color column='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk] + [federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk])</rows>
        <cols>([federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk] * [federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[tyr:Last Update:qk])</cols>
      </table>
      <simple-id uuid='{36760AA3-67E8-4A96-B42D-E2CD06883D9A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97978' id='11' param='horz' type-v2='layout-flow' w='98116' x='942' y='1011'>
            <zone h='97978' id='9' type-v2='layout-basic' w='79270' x='942' y='1011'>
              <zone h='48987' id='5' name='Global Cases' w='29867' x='26685' y='1011'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48987' id='7' name='Confirmed Cases' w='25743' x='942' y='1011'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48991' id='8' name='Death Cases' w='25743' x='942' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48991' id='13' name='Recovered' w='29867' x='26685' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48987' id='17' name='Sheet 7' w='23660' x='56552' y='1011'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48991' id='20' name='Mortalilty Rate' w='23660' x='56552' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97978' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='18846' x='80212' y='1011'>
              <zone h='9228' id='12' name='Death Cases' pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' type-v2='color' w='18846' x='80212' y='1011'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20860' id='14' name='Recovered' pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' type-v2='color' w='18846' x='80212' y='10239'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20860' id='15' name='Confirmed + Death' w='18846' x='80212' y='31099'>
                <layout-cache minheight='248' minwidth='178' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20860' id='16' name='Confirmed + Death' pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Confirmed:qk]' type-v2='size' w='18846' x='80212' y='51959'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9102' id='18' name='Sheet 7' pane-specification-id='2' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' type-v2='color' w='18846' x='80212' y='72819'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17068' id='19' name='Sheet 7' pane-specification-id='2' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]' type-v2='size' w='18846' x='80212' y='81921'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97978' id='21' param='vert' type-v2='layout-flow' w='98116' x='942' y='1011'>
                <zone fixed-size='280' h='48987' id='7' is-fixed='true' name='Confirmed Cases' w='25743' x='942' y='1011'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48987' id='5' is-fixed='true' name='Global Cases' w='29867' x='26685' y='1011'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48987' id='17' is-fixed='true' name='Sheet 7' w='23660' x='56552' y='1011'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9102' id='18' name='Sheet 7' pane-specification-id='2' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' type-v2='color' w='18846' x='80212' y='72819'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17068' id='19' name='Sheet 7' pane-specification-id='2' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]' type-v2='size' w='18846' x='80212' y='81921'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='159' h='20860' id='15' is-fixed='true' name='Confirmed + Death' w='18846' x='80212' y='31099'>
                  <layout-cache minheight='248' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20860' id='16' name='Confirmed + Death' pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Confirmed:qk]' type-v2='size' w='18846' x='80212' y='51959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48991' id='8' is-fixed='true' name='Death Cases' w='25743' x='942' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9228' id='12' name='Death Cases' pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' type-v2='color' w='18846' x='80212' y='1011'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48991' id='13' is-fixed='true' name='Recovered' w='29867' x='26685' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20860' id='14' name='Recovered' pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' type-v2='color' w='18846' x='80212' y='10239'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48991' id='20' is-fixed='true' name='Mortalilty Rate' w='23660' x='56552' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{93F79AA4-32FD-43B3-8862-E3C387C7B5B7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Confirmed Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A98EE56A-1F90-4B97-A425-E03926369B59}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C130CA2D-50E8-469E-8FAE-A5C9580D0B51}' />
    </window>
    <window class='worksheet' name='Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2A8FAD7-8E9F-4CD2-B671-3D6C356BAE24}' />
    </window>
    <window class='worksheet' name='Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8C6F571-5CDB-4BCD-8C54-5BBA959D89F6}' />
    </window>
    <window class='worksheet' name='Confirmed + Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B896B44-BF6A-4DBE-B6AB-2037E2C9D4C1}' />
    </window>
    <window class='worksheet' name='Mortalilty Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18863731-2C5C-4093-9F47-5B3CF4FA19BE}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[sum:Recovered:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]</field>
            <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD0F519B-087E-403A-8B33-334CF7AF8287}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Confirmed + Death'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Confirmed Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death Cases' />
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mortalilty Rate' />
        <viewpoint name='Recovered'>
          <highlight>
            <color-one-way>
              <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[none:Country Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1l7ntbf17p9u4i1ajyjfd1blr0rk].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{AE1743AD-0C2E-4C31-94F3-82A0217646B2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed + Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Confirmed Cases' width='192'>
      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
      kwCIQPv/FOH3qMX5oVoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Death Cases' width='192'>
      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
      a5mHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
      xx1AVRUqlbEOH8ZYMJ/ILTeDruMVCpiLF6PN8VWmUChEpTqGXjqNd+gQLFrkBxOrCy4SiTA4
      OEh05y7K/+ffAYjqGna1iJcIlXA4TKinh+LXfSM93NePsXABhX/732jRKJG7P0Y6HKJcLtPe
      3q4WdX2ja6jdDEEXZxDnoyCbKE67jaWlZHNzM0NDQ3hVySQSPpfLqTJ3MHxwxCDM5XIM7X0Z
      p6+PxLq1RM4Df7HYOW44RPGG62lra/MjwQCpFHpnJ+6xY5hdXcPUO28o7RfCdV3sV/cRqaoS
      EcOg8PnP4x46jLF0CfG7P0bzBz8AUJMPrVkW4c2X4h4/jv3Sbgqf/wKRm24kdONbMatsTInN
      1Kg1HsNIZ76dVlfJYv9+cBy8fB6t5wTmwoUqLyAYrGqU2SU/iwD7z4xRN4BIe+kMLt3fdV3H
      OH4C9/Bhmi5eeVqPkWmamENDZP6fv1O5tu2/89vn9BiVfggSdW1qamJgYIBYNXOLSIT4x+/G
      6x9A65wJ1Hm2ZkwnfP11OK+8QuTWW9RrIU3DOnkSQNGiJbVRNfw+cYL8l7+CFo0SvuZq7Jf8
      ekLle39F5bnnafrYR0nOm6uo4Imrr6IgLVHXrVVFqzRNQzt5EufVfZirLib2h3fhnuwjdNll
      WA8/cuphU01KaEmGWJC8KDygGhKkpqG/sJ3Mjh1Urr2G5s2bzzvv3WRgTCtQWndK21Orr5/i
      F7+El89jrl1D85/dPernPc+DbE7l2rp1Dc3ONjzPT92UjCg5vcTrI8k5WjSKNnuW+pyu+33U
      +vv7SSaTONe9hdjbbq05yQqOQ+zd78Z6/gVCW7coNUJyHjKZDM7el/H6+/E0Db29DXPVKr+o
      luvi9fVR3r2b+IL5JJNJxc+J3XQjhUKBvr6+U9wpyyL/pX/E6+/HWDCf6Cc/gWvbOOK2lec9
      epTQr36NF43SfOc7cfDTK+3v/Afu4ADhO+/E7mivMYpNy6Lw/R9AuUz++HHi69e/eTdAMM+0
      qamJdP8AntSQCZRNDyL4N9u2iSxdQuXmmyn/8pfYr71G5rnn0EwT0Igu6SI2wX5dE4E0urBt
      m0Qmi5fNoXXOVB4cKeNe32C7WCziOA6tra3qVBTPkKgVpXIZ7eKVaKsu9gNcuZxKHpk+fbp/
      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
    </thumbnail>
    <thumbnail height='192' name='Mortalilty Rate' width='192'>
      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
      igAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recovered' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      bTEM+mQMg/5/uhc+hHVOrjwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
